{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, resolveComponent as _resolveComponent, createBlock as _createBlock, vShow as _vShow, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-760d8672\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_2 = {\n  class: \"main\"\n};\nconst _hoisted_3 = {\n  class: \"showcase\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Describe An Image\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"form-control\"\n};\nconst _hoisted_6 = {\n  class: \"form-control\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"small\",\n  selected: \"\"\n}, \"Small (256x256)\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"medium\"\n}, \"Medium (512x512)\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"large\"\n}, \"Large (1024x1024)\", -1 /* HOISTED */));\nconst _hoisted_10 = [_hoisted_7, _hoisted_8, _hoisted_9];\nconst _hoisted_11 = {\n  class: \"form-control\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"1\\\" data-v-760d8672>1</option><option value=\\\"2\\\" data-v-760d8672>2</option><option value=\\\"3\\\" data-v-760d8672>3</option><option value=\\\"4\\\" data-v-760d8672>4</option><option value=\\\"5\\\" data-v-760d8672>5</option>\", 5);\nconst _hoisted_17 = [_hoisted_12];\nconst _hoisted_18 = {\n  class: \"flex-container\"\n};\nconst _hoisted_19 = {\n  key: 1,\n  class: \"flex\"\n};\nconst _hoisted_20 = [\"src\", \"alt\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_slider_page = _resolveComponent(\"slider-page\");\n  const _component_loading_page = _resolveComponent(\"loading-page\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"main\", _hoisted_2, [_createElementVNode(\"section\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers(() => {}, [\"prevent\"])),\n    id: \"image-form\",\n    class: \"form-class\"\n  }, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"prompt\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.prompt = $event),\n    placeholder: \"Enter Text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.prompt]]), _createCommentVNode(\" <button @click='prompt=\\\"\\\"'>x</button> \")]), _createCommentVNode(\" size \"), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"select\", {\n    name: \"size\",\n    id: \"size\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.size = $event)\n  }, _hoisted_10, 512 /* NEED_PATCH */), [[_vModelSelect, $data.size]])]), _createCommentVNode(\" size \"), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"select\", {\n    name: \"howmany\",\n    id: \"howmany\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.howmany = $event)\n  }, _hoisted_17, 512 /* NEED_PATCH */), [[_vModelSelect, $data.howmany]])]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.generateImage && $options.generateImage(...args)),\n    class: \"btn\"\n  }, \"Generate\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.ClearImage && $options.ClearImage(...args)),\n    class: \"btn red\"\n  }, \"Clear\")])], 32 /* HYDRATE_EVENTS */)]), _createElementVNode(\"section\", null, [false ? (_openBlock(), _createBlock(_component_slider_page, {\n    key: 0,\n    width: \"40\",\n    items: Object.values($data.imageUrl)\n  }, null, 8 /* PROPS */, [\"items\"])) : _createCommentVNode(\"v-if\", true), _withDirectives(_createVNode(_component_loading_page, {\n    spaceT: 10,\n    spaceB: 10\n  }, null, 512 /* NEED_PATCH */), [[_vShow, $data.spinner]]), $data.imageUrl ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.imageUrl.data, (image, index) => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      key: index,\n      src: image.url,\n      alt: image.url\n    }, null, 8 /* PROPS */, _hoisted_20);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */)), [[_vShow, !$data.spinner]]) : _createCommentVNode(\"v-if\", true)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","value","selected","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_12","$data","error","_createElementBlock","_hoisted_1","_toDisplayString","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","id","_hoisted_4","_hoisted_5","type","prompt","$event","placeholder","_createCommentVNode","_hoisted_6","name","size","_hoisted_11","howmany","_hoisted_18","onClick","args","$options","generateImage","ClearImage","_createBlock","_component_slider_page","width","items","Object","values","imageUrl","_createVNode","_component_loading_page","spaceT","spaceB","spinner","_hoisted_19","_Fragment","_renderList","data","image","index","key","src","url","alt"],"sources":["/Users/mac/Desktop/Vue3-openai-image-generator/src/components/chatgptUI.vue"],"sourcesContent":["<template>\n    <div class=\"error\" v-if=\"error\">{{ error }}</div>\n    <main class=\"main\">\n        <section class=\"showcase\">\n            <form @submit.prevent id=\"image-form\" class=\"form-class\">\n                <h1>Describe An Image</h1>\n                <div class=\"form-control\">\n                    <input\n                        type=\"text\"\n                        id=\"prompt\"\n                        v-model=\"prompt\"\n                        placeholder=\"Enter Text\"\n                    />\n                    <!-- <button @click='prompt=\"\"'>x</button> -->\n                </div>\n                <!-- size -->\n                <div class=\"form-control\">\n                    <select name=\"size\" id=\"size\" v-model=\"size\">\n                        <option value=\"small\" selected>Small (256x256)</option>\n                        <option value=\"medium\">Medium (512x512)</option>\n                        <option value=\"large\">Large (1024x1024)</option>\n                    </select>\n                </div>\n                <!-- size -->\n                <div class=\"form-control\">\n                    <select name=\"howmany\" id=\"howmany\" v-model=\"howmany\">\n                        <option value=\"1\">1</option>\n                        <option value=\"2\">2</option>\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                    </select>\n                </div>\n                <div class=\"flex-container\">\n                    <button @click=\"generateImage\" class=\"btn\">Generate</button>\n                    <button @click=\"ClearImage\" class=\"btn red\">Clear</button>\n                </div>\n            </form>\n        </section>\n        <section>\n            <slider-page\n                width=\"40\"\n                v-if=\"false\"\n                :items=\"Object.values(imageUrl)\"\n            />\n            <loading-page v-show=\"spinner\" :spaceT=\"10\" :spaceB=\"10\" />\n            <div v-show=\"!spinner\" class=\"flex\" v-if=\"imageUrl\">\n                <img\n                    v-for=\"(image, index) in imageUrl.data\"\n                    :key=\"index\"\n                    :src=\"image.url\"\n                    :alt=\"image.url\"\n                />\n            </div>\n        </section>\n    </main>\n</template>\n<script>\nimport axios from \"axios\";\n\nimport LoadingPage from \"../components/LoadingPage.vue\";\nimport SliderPage from \"./SliderPage.vue\";\nexport default {\n    name: \"chatgptUI\",\n    components: {\n        LoadingPage,\n        SliderPage,\n    },\n    data() {\n        return {\n            error: \"\",\n            prompt: \"\",\n            spinner: false,\n            // prompt: \"Annaba city at night\",\n            size: \"small\",\n            howmany: 1,\n            imageUrl: null,\n        };\n    },\n    methods: {\n        obj2array(obj) {\n            // return obj.values();\n            return Object.values(obj);\n        },\n        ClearImage() {\n            this.imageUrl = null;\n            this.error = \"\";\n            this.spinner = false;\n        },\n        async generateImage() {\n            this.imageUrl = null;\n            this.error = \"\";\n            this.spinner = true;\n            const imageSize =\n                this.size === \"small\"\n                    ? \"256x256\"\n                    : this.size === \"medium\"\n                    ? \"512x512\"\n                    : \"1024x1024\";\n            try {\n                const response = await axios.post(\n                    \"https://api.openai.com/v1/images/generations\",\n                    {\n                        model: \"image-alpha-001\",\n                        prompt: this.prompt,\n                        size: imageSize,\n                        n: parseInt(this.howmany),\n                        response_format: \"url\",\n                    },\n                    {\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${process.env.VUE_APP_OPENAI_API_KEY}`, // Replace with your OpenAI API key\n                        },\n                    }\n                );\n                this.imageUrl = response.data;\n\n                this.spinner = false;\n            } catch (error) {\n                console.error(error.response.status);\n                this.spinner = false;\n                // if (error.response.status == \"400\") {\n                //     }\n                    this.error = error.response.data.error.message;\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.main {\n    padding-bottom: 50px;\n    background: var(--primary-color);\n}\n.form-control {\n    display: flex;\n    align-items: center;\n    /* justify-content: center; */\n    flex-direction: column;\n}\n.showcase h1 {\n    color: #fff;\n}\n.form-class {\n    padding: 20;\n    color: rgb(85, 0, 255);\n}\n.red {\n    color: #f00;\n}\n.error {\n    background-color: #ff0000;\n    color: #fff;\n    text-align: center;\n    font-weight: 600;\n    line-height: 75px;\n    font-size: 30px;\n}\n.flex-container {\n    display: flex;\n    flex-wrap: nowrap;\n    /* background-color: DodgerBlue; */\n}\n.flex-container > div {\n    /* background-color: #f1f1f1; */\n    width: 100px;\n    margin: 10px;\n    text-align: center;\n    line-height: 75px;\n    font-size: 30px;\n}\n\n.flex {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-flow: wrap;\n    width: 100%;\n    padding: 60px;\n    background-color: var(--primary-color);\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}